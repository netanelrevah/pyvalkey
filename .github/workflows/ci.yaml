name: CI

on:
  pull_request:
    branches:
      - main

jobs:
  valkey:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          path: pyvalkey
      - uses: actions/checkout@v4
        with:
          repository: valkey-io/valkey
          path: valkey
      - uses: astral-sh/setup-uv@v5
      - run: uv python install
      - working-directory: ./pyvalkey
        run: uv sync --all-extras --dev
      - working-directory: ./pyvalkey
        run: uv run python -m pyvalkey &
      - working-directory: ./valkey
        run: sudo apt-get install tcl8.6 tclx
      - working-directory: ./valkey
        run: ./runtest --host localhost --port 6379 --verbose --dump-logs --tags "-needs:debug"
        timeout-minutes: 5

  valkey-py:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          path: pyvalkey
      - uses: actions/checkout@v4
        with:
          repository: valkey-io/valkey-py
          path: valkey-py
      - uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - run: uv python install
      - working-directory: ./pyvalkey
        run: uv sync --all-extras --dev
      - working-directory: ./pyvalkey
        run: uv run python -m pyvalkey &
      - uses: actions/setup-python@v4
      - working-directory: ./valkey-py
        run: pip install -r requirements.txt -r dev_requirements.txt
      - working-directory: ./valkey-py
        run: pytest -q --uvloop --no-summary --disable-warnings --show-capture=no --tb=no tests/test_commands.py

  lint-outside-of-matrix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - run: uv python install
      - run: uv sync --all-extras --dev
      - run: uv lock --check
      - run: uv run mypy pyvalkey
        if: '!cancelled()'
      - run: uv run ruff check --output-format=github .
        if: '!cancelled()'
      - run: uv run ruff format --check .
        if: '!cancelled()'

  lint:
    runs-on: ${{ matrix.image }}
    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    strategy:
      matrix:
        os: [ Ubuntu, macOS, Windows ]
        python-version: [ "3.11", "3.12" , "3.13"]
        include:
          - os: Ubuntu
            image: ubuntu-latest
          - os: Windows
            image: windows-latest
          - os: macOS
            image: macos-latest
      fail-fast: false
    defaults:
      run:
        shell: bash
    env:
      UV_PYTHON: ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v3
      - uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - run: uv python install
      - run: uv sync --all-extras --dev
      - name: Run pytest
        run: uv run python -m pytest -v tests/test_pyvalkey tests/test_valkey