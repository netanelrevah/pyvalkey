name: CI

on:
  pull_request:
    branches:
      - main

jobs:
  redis-py:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          path: pyvalkey
      - uses: actions/checkout@v4
        with:
          repository: redis/redis-py
          path: redis-py
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - uses: snok/install-poetry@v1
      - working-directory: ./pyvalkey
        run: poetry install --no-interaction --no-root
      - working-directory: ./pyvalkey
        run: poetry run python -m pyvalkey &
      - working-directory: ./redis-py
        run: pip install -r requirements.txt -r dev_requirements.txt
      - working-directory: ./redis-py
        run: pytest -v tests/test_commands.py

  lint-outside-of-matrix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - uses: snok/install-poetry@v1
      - id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --with dev --no-interaction --no-root
      - run: poetry check
      - run: poetry lock --check
      - run: poetry run mypy pyvalkey
      - run: poetry run ruff check --output-format=github .
      - run: poetry run ruff format --check --output-format=github .

  lint:
    runs-on: ${{ matrix.image }}
    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    strategy:
      matrix:
        os: [ Ubuntu, macOS, Windows ]
        python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12", "3.13" ]
        include:
          - os: Ubuntu
            image: ubuntu-22.04
          - os: Windows
            image: windows-2022
          - os: macOS
            image: macos-12
      fail-fast: false
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: snok/install-poetry@v1

      - id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --with dev --no-interaction --no-root

      - name: Run pytest
        run: poetry run pytest -v tests

      - run: poetry run python -m pyvalkey &

      - name: Run pytest valkey
        run: poetry run pytest -v valkey_tests --external