[tool.poetry]
name = "pyvalkey"
version = "0.0.4"
description = "pyvalkey: Python implemented Valkey server"
authors = ["Netanel Revah <netanelrevah@outlook.com>"]
license = "MIT License"
readme = "README.md"
packages = [
    { include = "pyvalkey" },
]

[tool.poetry.dependencies]
python = "^3.8"
typer = "^0.12"
sortedcontainers = "^2.4.0"
typing-extensions = "^4.8.0"

[tool.poetry.group.dev.dependencies]
mypy = "*"
redis = "^5.0.0"
pytest = "^8"
pytest-parametrization = "*"
ruff = "*"
sortedcontainers-stubs = "*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]

testpaths = "tests valkey_tests"

[tool.ruff]
target-version = "py38"
line-length = 120

lint.select = ["ANN", "I", "N", "UP", "PGH", "RUF", "F"]
lint.ignore = ["E731", "ANN101", "ANN102", "RUF009"]

[tool.ruff.lint.per-file-ignores]
"**/{tests}/*" = ["ANN"]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[[tool.mypy.overrides]]
module = [
    "sortedcontainers",
    "typer"
]
ignore_missing_imports = true

